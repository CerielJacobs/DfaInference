<project
    name="DFA Inference"
    default="build"
    basedir=".">

    <description>
	Ibis Dfa inference satin application build
    </description>

    <property name="satinc-flags" value="-keep"/>

    <property name="satin-so-classes" value="sample.Samples iterativeDeepening.ControlResultPairTable"/>

    <property name="satin-spawn-classes" value="DfaInference.SatinFolder iterativeDeepening.BestBlue iterativeDeepening.BestBlueMW DfaInference.SatinRunner"/>

    <property name="satin-classes.value" value="-syncrewriter &quot;${satin-spawn-classes}&quot; -satin &quot;${satin-spawn-classes} ${satin-so-classes}&quot;"/>

    <property environment="env"/>
    <property name="myclasspath" value="${env.CLASSPATH}"/>

    <property name="tmp"         value="tmp"/>
    <property name="lib"         value="lib"/>

    <basename file="." property="application-name" />

    <target name="set-classpath" unless="classpath.initialized">
	<path id="default.classpath">
	    <pathelement path="${tmp}"/>
	    <pathelement path="${user-classpath}"/>
	    <pathelement path="${myclasspath}"/>
	    <fileset dir="lib">
		<include name="*.jar"/>
	    </fileset>
	</path>
	<echo	message="Now set default.classpath to ${default.classpath}"
		level="verbose"/>
	<property name="classpath.initialized" value="true"/>
    </target>

    <target name="property-init"
	    depends="set-classpath">
    </target>

    <target name="init" depends="property-init">
        <tstamp />
        <mkdir dir="${tmp}" />
        <mkdir dir="${lib}" />
    </target>

    <target name="compile" depends="clean,init,copy-included-satin"
	    description="Compile application without any bytecode rewriting">
	<javac destdir="${tmp}" debug="true" srcdir="src">
	    <classpath refid="default.classpath" />
	    <!--
	    <compilerarg value="-Xlint:unchecked"/>
	    -->
            <include name="**/*.java" />
        </javac>
    </target>

    <target name="satin">
	<java	classname="ibis.compile.Ibisc"
		taskname="Ibisc"
		dir="${tmp}"
		failonerror="true"
		maxmemory="512M"
		fork="true">
		<arg line="${satinc-flags} ${satin-classes.value} ."/>
		<classpath refid="default.classpath"/>
	</java>

    </target>

    <!-- copy external dependancies to lib, including provided Satin -->
    <target name="copy-included-satin">
	<mkdir dir="${lib}" />
	<copy todir="${lib}">
	    <fileset dir="external"/>
	</copy>
    </target>

    <target name="build"
	description="Compile Satin application for parallel execution"
	depends="jar"/>

    <target name="jar" depends="compile,satin" description="Build a Jar file for an application">
	<jar destfile="${lib}/${application-name}.jar" basedir="${tmp}" includes="**/*.class">
        </jar>
        <delete dir="${tmp}" />
    </target>

    <target name="compile-jar" depends="compile" description="Build a Jar file for an application">
	<jar destfile="${lib}/${application-name}.jar" basedir="${tmp}" includes="**/*.class">
        </jar>
        <delete dir="${tmp}" />
    </target>

    <target name="clean" description="Clean up the build">
        <delete dir="${tmp}" />
        <delete dir="${lib}" />
    </target>

    <target name="test"
	    depends="compile"
	    description="Run Junit test">
	<antcall target="runseq">
		<param name="runjob" value="junit.textui.TestRunner main.Tests"/>
	</antcall>
    </target>

    <target name="docs"
        description="Build JavaDoc documentation in `docs' directory">
	<!-- Create the javadoc directory -->
	<delete dir="docs"/>
	<mkdir dir="docs"/>
	<javadoc destdir="docs" sourcepath="src" author="true" version="true" use="true" private="true" packagenames="DfaInference,AbbaDingo,generate" windowtitle="DFA Inference program documentation" doctitle="DFA Inference program Documentation" bottom="DFA INFERENCE">
	    <classpath refid="default.classpath"/>
	</javadoc>
    </target>
</project>
